/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lab01;

import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.Stack;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import static lab01.LAB01.escribirArchivo;
import static lab01.LAB01.leerArchivo;

/**
 *
 * @author oliro
 */
public class Interfaz extends javax.swing.JFrame {

    /**
     * Creates new form Interfaz
     */
    public Interfaz(NodoArbol n) {
        initComponents();
        b.raiz = n;
        seleccionar.addItem((String) b.raiz.dato);
        if(b.raiz.hijos.ptr!=null){
            recorrer(b.raiz.hijos.ptr);
        }
        
       
    }
    int c = 0;
    Arbol b = new Arbol();
    int ter;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jTextField2 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        etapa = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        tipo = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        agregar = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        pre = new javax.swing.JButton();
        post = new javax.swing.JButton();
        in = new javax.swing.JButton();
        altura = new javax.swing.JButton();
        hojas = new javax.swing.JButton();
        entregables = new javax.swing.JButton();
        mostrararbol = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        seleccionar = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        vertxt = new javax.swing.JTextArea();
        escribir = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        ver2 = new javax.swing.JTextArea();
        Cronograma = new javax.swing.JButton();

        jPanel3.setBackground(new java.awt.Color(4, 150, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jTextField2.setText("jTextField1");

        jLabel2.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Digite su etapa:");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextField2, javax.swing.GroupLayout.DEFAULT_SIZE, 292, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.DEFAULT_SIZE, 24, Short.MAX_VALUE)
                    .addComponent(jLabel2))
                .addContainerGap())
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(27, 94, 181));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "EDT", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14), new java.awt.Color(255, 255, 255))); // NOI18N

        jPanel2.setBackground(new java.awt.Color(4, 150, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Digite su etapa:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(etapa)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(etapa, javax.swing.GroupLayout.DEFAULT_SIZE, 24, Short.MAX_VALUE)
                    .addComponent(jLabel1))
                .addContainerGap())
        );

        jPanel4.setBackground(new java.awt.Color(4, 150, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel3.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Seleccione el tipo de la etapa:");

        tipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Paquete de trabajo", "Entregable" }));
        tipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tipoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tipo, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(tipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jLabel4.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 28)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText(" Módulo de gestión de la EDT");

        agregar.setBackground(new java.awt.Color(4, 150, 255));
        agregar.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 14)); // NOI18N
        agregar.setForeground(new java.awt.Color(255, 255, 255));
        agregar.setText("Agregar etapa");
        agregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarActionPerformed(evt);
            }
        });

        jPanel6.setBackground(new java.awt.Color(4, 150, 255));
        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Herramientas", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 18), new java.awt.Color(255, 255, 255))); // NOI18N

        jPanel7.setBackground(new java.awt.Color(27, 94, 181));
        jPanel7.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true));

        pre.setBackground(new java.awt.Color(4, 150, 255));
        pre.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 14)); // NOI18N
        pre.setForeground(new java.awt.Color(255, 255, 255));
        pre.setText("PreOrden");
        pre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                preActionPerformed(evt);
            }
        });

        post.setBackground(new java.awt.Color(4, 150, 255));
        post.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 14)); // NOI18N
        post.setForeground(new java.awt.Color(255, 255, 255));
        post.setText("PostOrden");
        post.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                postActionPerformed(evt);
            }
        });

        in.setBackground(new java.awt.Color(4, 150, 255));
        in.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 14)); // NOI18N
        in.setForeground(new java.awt.Color(255, 255, 255));
        in.setText("InOrden");
        in.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pre)
                .addGap(36, 36, 36)
                .addComponent(post)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addComponent(in, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pre)
                    .addComponent(post)
                    .addComponent(in))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        altura.setBackground(new java.awt.Color(27, 94, 181));
        altura.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 14)); // NOI18N
        altura.setForeground(new java.awt.Color(255, 255, 255));
        altura.setText("Altura del arbol");
        altura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                alturaActionPerformed(evt);
            }
        });

        hojas.setBackground(new java.awt.Color(27, 94, 181));
        hojas.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 14)); // NOI18N
        hojas.setForeground(new java.awt.Color(255, 255, 255));
        hojas.setText("Nodos terminales");
        hojas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hojasActionPerformed(evt);
            }
        });

        entregables.setBackground(new java.awt.Color(27, 94, 181));
        entregables.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 12)); // NOI18N
        entregables.setForeground(new java.awt.Color(255, 255, 255));
        entregables.setText("Nodos con un entregable");
        entregables.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                entregablesActionPerformed(evt);
            }
        });

        mostrararbol.setBackground(new java.awt.Color(27, 94, 181));
        mostrararbol.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 14)); // NOI18N
        mostrararbol.setForeground(new java.awt.Color(255, 255, 255));
        mostrararbol.setText("Mostrar arbol");
        mostrararbol.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mostrararbolActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(altura, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(entregables, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(hojas, javax.swing.GroupLayout.DEFAULT_SIZE, 192, Short.MAX_VALUE)
                            .addComponent(mostrararbol, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(altura)
                    .addComponent(hojas))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(entregables, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mostrararbol))
                .addContainerGap())
        );

        jPanel8.setBackground(new java.awt.Color(4, 150, 255));
        jPanel8.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel5.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Seleccione el padre de la etapa:");

        seleccionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seleccionarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(seleccionar, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(seleccionar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        vertxt.setColumns(20);
        vertxt.setRows(5);
        jScrollPane1.setViewportView(vertxt);

        escribir.setBackground(new java.awt.Color(4, 150, 255));
        escribir.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 14)); // NOI18N
        escribir.setForeground(new java.awt.Color(255, 255, 255));
        escribir.setText("Escribir txt");
        escribir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                escribirActionPerformed(evt);
            }
        });

        ver2.setColumns(20);
        ver2.setRows(5);
        jScrollPane2.setViewportView(ver2);

        Cronograma.setBackground(new java.awt.Color(4, 150, 255));
        Cronograma.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 24)); // NOI18N
        Cronograma.setForeground(new java.awt.Color(255, 255, 255));
        Cronograma.setText("Cronograma");
        Cronograma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CronogramaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(64, 64, 64)
                                .addComponent(agregar, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(escribir, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jPanel8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jPanel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 661, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 840, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Cronograma, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 487, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(38, 38, 38)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(38, 38, 38)
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(agregar)
                            .addComponent(escribir))
                        .addGap(18, 18, 18)
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(14, 14, 14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Cronograma, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void agregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarActionPerformed
        String paso = etapa.getText();
        if(!etapa.getText().equals("")){
        if (b.raiz.hijos.ptr == null) {
            if (tipo.getSelectedItem().toString().equals("Paquete de trabajo")) {
                b.raiz.hijos.insertar(new NodoArbol(paso, 1));

                seleccionar.addItem(paso);
            } else {
                if (tipo.getSelectedItem().equals("Entregable")) {
                    b.raiz.hijos.insertar(new NodoArbol(paso, 2));
                    ter++;

                } else {

                }
            }
        } else {

            if (b.raiz.dato.equals(seleccionar.getSelectedItem().toString())) {
                if (tipo.getSelectedItem().equals("Paquete de trabajo")) {

                    b.raiz.hijos.insertar(new NodoArbol(paso, 1));
                    seleccionar.addItem(paso);
                } else {
                    if (tipo.getSelectedItem().equals("Entregable")) {
                        b.raiz.hijos.insertar(new NodoArbol(paso, 2));
                        ter++;

                    } else {

                    }
                }
                NodoLista p = b.raiz.hijos.ptr;
                while (p != null) {
                    System.out.println(p.nArbol.dato);
                    p = p.link;
                }
            } else {

                NodoLista nodo;
                nodo = buscar(b.raiz.hijos.ptr);
                if (nodo != null) {
                    System.out.println(nodo.nArbol.dato + " padre");
                    if (tipo.getSelectedItem().equals("Paquete de trabajo")) {
                        nodo.nArbol.hijos.insertar(new NodoArbol(paso, 1));

                        seleccionar.addItem(paso);
                    } else {
                        if (tipo.getSelectedItem().equals("Entregable")) {
                            nodo.nArbol.hijos.insertar(new NodoArbol(paso, 2));
                            ter++;

                        } else {

                        }
                    }
                    if (nodo.nArbol.hijos.ptr.nArbol.dato != null) {
                        NodoLista s = nodo.nArbol.hijos.ptr;
                        while (s != null) {
                            System.out.println(s.nArbol.dato);
                            s = s.link;
                        }
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "La etapa padre que escribio no existe. Porfavor digite otro padre", "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        }

        System.out.println("----------");
        etapa.setText("");
        }else{
            JOptionPane.showMessageDialog(null, "Por favor coloque un nombre a esta etapa", "Error", JOptionPane.ERROR_MESSAGE); 
        }
    }//GEN-LAST:event_agregarActionPerformed

    private void preActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_preActionPerformed
        vertxt.setText("");
        vertxt.append("El recorrido en preOrden es: | " + b.raiz.dato);
        preorden(b.raiz.hijos.ptr);

    }//GEN-LAST:event_preActionPerformed

    private void postActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_postActionPerformed
        vertxt.setText("");
        vertxt.append("El recorrido en postOrden es: ");
        postorden(b.raiz.hijos.ptr);
        vertxt.append("| " + b.raiz.dato);
    }//GEN-LAST:event_postActionPerformed

    private void inActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inActionPerformed
        vertxt.setText("");
        vertxt.append("El recorrido en inOrden es: ");
        inorden(b.raiz.hijos.ptr, null);
    }//GEN-LAST:event_inActionPerformed

    private void alturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_alturaActionPerformed
        vertxt.setText("");
        int al = altura(b.raiz.hijos.ptr);
        vertxt.append("La altura del arbol es: " + al);
    }//GEN-LAST:event_alturaActionPerformed

    private void tipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tipoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tipoActionPerformed

    private void hojasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hojasActionPerformed
        vertxt.setText("");
        vertxt.append("los nodos terminales son: ");
        hojas(b.raiz.hijos.ptr);
    }//GEN-LAST:event_hojasActionPerformed

    private void entregablesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_entregablesActionPerformed
        vertxt.setText("");
        vertxt.append("Los nodos con un entregable son: ");
        entregable(b.raiz.hijos.ptr);
    }//GEN-LAST:event_entregablesActionPerformed

    private void escribirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_escribirActionPerformed
        escribirArbol(b.raiz.hijos.ptr);
    }//GEN-LAST:event_escribirActionPerformed

    private void mostrararbolActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mostrararbolActionPerformed
        ver2.setText("");
        ver2.append("▼" + b.raiz.dato);
        if(b.raiz.hijos.ptr!=null){
        mostrarArbol(b.raiz.hijos.ptr);
        }
    }//GEN-LAST:event_mostrararbolActionPerformed

    private void seleccionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seleccionarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_seleccionarActionPerformed

    private void CronogramaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CronogramaActionPerformed
        if(b.raiz.hijos.ptr!=null){
        boolean op =op(b.raiz.hijos.ptr);
        if(op==true){
         int n=Cantidad(b.raiz.hijos.ptr);   
        Cronograma c = new Cronograma(b.raiz,n); 
        c.setVisible(true);
        c.setResizable(false);
        c.setLocationRelativeTo(null);
        dispose();
        }else{
           JOptionPane.showMessageDialog(null, "Este proyecto no tiene actividades", "Error", JOptionPane.ERROR_MESSAGE);   
        }
        }else{
        JOptionPane.showMessageDialog(null, "Este proyecto no tiene actividades", "Error", JOptionPane.ERROR_MESSAGE);   
    }
    }//GEN-LAST:event_CronogramaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {

            }
        });

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Cronograma;
    private javax.swing.JButton agregar;
    private javax.swing.JButton altura;
    private javax.swing.JButton entregables;
    private javax.swing.JButton escribir;
    private javax.swing.JTextField etapa;
    private javax.swing.JButton hojas;
    private javax.swing.JButton in;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JButton mostrararbol;
    private javax.swing.JButton post;
    private javax.swing.JButton pre;
    private javax.swing.JComboBox<String> seleccionar;
    private javax.swing.JComboBox<String> tipo;
    private javax.swing.JTextArea ver2;
    private javax.swing.JTextArea vertxt;
    // End of variables declaration//GEN-END:variables

    public NodoLista buscar(NodoLista Nodo) {
        NodoLista q = null;
        Stack<NodoLista> pila = new Stack();
        NodoLista p = Nodo;
        int tope = 0;
        do {
            if (p != null) {
                if (p.nArbol.dato.equals(seleccionar.getSelectedItem().toString())) {
                    q = p;
                }
                pila.push(p);
                p = p.nArbol.hijos.ptr;
                tope++;
            } else {
                p = (NodoLista) pila.pop();
                if (p.nArbol.dato != null) {
                }
                p = p.link;
                tope--;
            }
        } while (tope != 0 || p != null);
        return q;
    }

    
     public void mostrarArbol(NodoLista Nodo) {
        Stack<NodoLista> pila = new Stack();
        NodoLista p = Nodo;
        int tope = 0;
        do {
            if (p != null) {
         int alt=altura2(p);
             String r="    ";
             for(int i=1;i<=alt;i++){
                 r=r+"    ";
             }
                if (p.nArbol.tipo.equals(1)) {
                ver2.append("\n \t"+r+ "▼" + p.nArbol.dato + "(Paquete de trabajo)");
            }
            if (p.nArbol.tipo.equals(2)) {
                ver2.append("\n \t"+r+"▯" + p.nArbol.dato + "(Entregable)");
            }  
                pila.push(p);
                p = p.nArbol.hijos.ptr;
                tope++;
            } else {
                p = (NodoLista) pila.pop();
                p = p.link;
                tope--;
            }
        } while (tope != 0 || p != null);
    }
    public int Cantidad(NodoLista Nodo){
        int n=0; 
        Stack<NodoLista> pila = new Stack();
        NodoLista p = Nodo;
        int tope = 0;
        do {
            if (p != null) {
                if(p.nArbol.tipo.equals(2)){
                   n=n+1;
                }
                pila.push(p);
                p = p.nArbol.hijos.ptr;
                tope++;
            } else {
                p = (NodoLista) pila.pop();
                p = p.link;
                tope--;
            }
        } while (tope != 0 || p != null);
        return n;
    }

    public void escribirArbol(NodoLista nodo) {
        if (nodo == null) {
            return;
        } else {
            escribirArchivo(b.raiz.dato + ".txt", "\t " + nodo.nArbol.dato);
            escribirArbol(nodo.nArbol.hijos.ptr);
            escribirArbol(nodo.link);
        }
    }

    public void preorden(NodoLista nodo) {
        if (nodo == null) {
            return;
        } else {
            vertxt.append("| " + nodo.nArbol.dato);
            preorden(nodo.nArbol.hijos.ptr);
            preorden(nodo.link);
        }
    }

    public void mostrarArbol2(NodoLista nodo) {
        if (nodo == null) {
            return;
        } else {
            if(b.raiz.hijos.ptr==null){
            }
            
            int alt=altura2(nodo);
           
             String r=" ";
             for(int i=1;i<alt;i++){
                 r=r+" ";
             }
                if (nodo.nArbol.tipo.equals(1)) {
                ver2.append(r+"\n \t  ▼" + nodo.nArbol.dato + "(Paquete de trabajo)");
            }
            if (nodo.nArbol.tipo.equals(2)) {
                ver2.append(r+"\n \t ▯" + nodo.nArbol.dato + "(Entregable)");
            }  
            

            mostrarArbol(nodo.nArbol.hijos.ptr);
            mostrarArbol(nodo.link);
        }
    }

    public void inorden(NodoLista nodo, NodoLista q) {
        if (nodo == null) {
            return;
        } else {
            if (nodo.nArbol.hijos.ptr == null) {
                if (nodo.nArbol.dato.equals(q.nArbol.hijos.ptr.nArbol.dato)) {
                    vertxt.append("| " + nodo.nArbol.dato);
                    vertxt.append("| " + q.nArbol.dato);
                } else {
                    vertxt.append("| " + nodo.nArbol.dato);
                }
            } else {
                q = nodo;
            }

            inorden(nodo.nArbol.hijos.ptr, q);
            if (nodo.nArbol.dato.equals(b.raiz.hijos.ptr.nArbol.dato)) {
                vertxt.append("| " + b.raiz.dato);
            }
            inorden(nodo.link, q);
        }
    }

    public void postorden(NodoLista nodo) {
        if (nodo == null) {
            return;
        } else {
            postorden(nodo.nArbol.hijos.ptr);
            vertxt.append("| " + nodo.nArbol.dato);
            postorden(nodo.link);
        }
    }

    public void hojas(NodoLista Nodo) {
        Stack<NodoLista> pila = new Stack();
        NodoLista p = Nodo;
        int tope = 0;
        do {
            if (p != null) {
                if (p.nArbol.hijos.ptr == null && p.nArbol.tipo.equals(2)) {
                    vertxt.append("| " + p.nArbol.dato);
                }
                pila.push(p);
                p = p.nArbol.hijos.ptr;
                tope++;
            } else {
                p = (NodoLista) pila.pop();
                if (p.nArbol.dato != null) {
                }
                p = p.link;
                tope--;
            }
        } while (tope != 0 || p != null);
    }

    public void entregable(NodoLista Nodo) {
        NodoLista q = null;
        Stack<NodoLista> pila = new Stack();
        NodoLista p = Nodo;
        int tope = 0;
        do {
            if (p != null) {
                if (p.nArbol.hijos.ptr != null) {
                    q = p.nArbol.hijos.ptr;
                    int s = 0;
                    while (q != null) {
                        if (q.nArbol.tipo.equals(2)) {
                            s++;
                        }
                        q = q.link;
                    }
                    if (s == 1) {
                        vertxt.append("| " + p.nArbol.dato);
                    }
                }
                pila.push(p);
                p = p.nArbol.hijos.ptr;
                tope++;
            } else {
                p = (NodoLista) pila.pop();
                if (p.nArbol.dato != null) {
                }
                p = p.link;
                tope--;
            }
        } while (tope != 0 || p != null);
    }

    public int altura(NodoLista Nodo) {
        int altura = 0;
        Stack<NodoLista> pila = new Stack();
        NodoLista p = Nodo;
        int tope = 0;
        do {
            if (p != null) {
                pila.push(p);
                p = p.nArbol.hijos.ptr;
                tope++;
            } else {
                if (tope > altura) {
                    altura = tope;
                }
                p = (NodoLista) pila.pop();
                if (p.nArbol.dato != null) {
                }
                p = p.link;
                tope--;
            }
        } while (tope != 0 || p != null);
        return altura;
    }
    
     public int altura2(NodoLista Nodo) {
        int altura = 0;
        Stack<NodoLista> pila = new Stack();
        NodoLista p = b.raiz.hijos.ptr;
        int tope = 0;
        do {
            if (p != null) {
                pila.push(p);
                tope++;
                 if (p.nArbol.dato.equals(Nodo.nArbol.dato)) {
                    altura = tope;
                }
                  p = p.nArbol.hijos.ptr;
                  
            } else {
                p = (NodoLista) pila.pop();
                
                p = p.link;
                tope--;
            }
        } while (tope != 0 || p != null);
        return altura;
    }
     public void recorrer(NodoLista Nodo){
          Stack<NodoLista> pila = new Stack();
        NodoLista p = Nodo;
        int tope = 0;
        do {
            if (p != null) {
                if(p.nArbol.tipo.equals(1)){
                  seleccionar.addItem(p.nArbol.dato.toString());
                }
                pila.push(p);
                p = p.nArbol.hijos.ptr;
                tope++;
            } else {
                p = (NodoLista) pila.pop();
                p = p.link;
                tope--;
            }
        } while (tope != 0 || p != null);
    }
     public boolean op(NodoLista Nodo){
        boolean op=false;
          Stack<NodoLista> pila = new Stack();
        NodoLista p = Nodo;
        int tope = 0;
        do {
            if (p != null) {
                if(p.nArbol.tipo.equals(2)){
                  op=true;
                }
                pila.push(p);
                p = p.nArbol.hijos.ptr;
                tope++;
            } else {
                p = (NodoLista) pila.pop();
                p = p.link;
                tope--;
            }
        } while (tope != 0 || p != null);
         return op;
     }
}
